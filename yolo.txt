
#!wget https://github.com/AlexeyAB/darknet/releases/download/yolov4/yolov4.weights # yolov4.weights 다운로드
#!wget https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolov4.cfg # yolov4.cfg 다운로드
#!wget https://raw.githubusercontent.com/pjreddie/darknet/master/data/coco.names # coco.names 다운로드


import urllib.request
import cv2
import numpy as np
import matplotlib.pyplot as plt

# (1) 테스트용 이미지 가져오기 (URL)
url = "https://github.com/GyuyeongKim/autocar/blob/main/people.jpeg?raw=True" # 단체사진
#url = "https://github.com/GyuyeongKim/autocar/blob/main/road.jpg?raw=True" # 도로+차량+사람
req = urllib.request.urlopen(url)
arr = np.asarray(bytearray(req.read()), dtype=np.uint8)
img = cv2.imdecode(arr, cv2.IMREAD_COLOR)  # BGR 형식

# (2) YOLO 모델 설정
yolo_config = "yolov4.cfg"  # YOLO config file path
yolo_weights = "yolov4.weights"  # YOLO weights file path
classes_file = "coco.names"  # COCO dataset class names

# 클래스 이름 읽기
with open(classes_file, 'r') as f:
    classes = [line.strip() for line in f.readlines()]

# YOLO 네트워크 로드
net = cv2.dnn.readNet(yolo_weights, yolo_config)
layer_names = net.getLayerNames()
output_layers = [layer_names[i - 1] for i in net.getUnconnectedOutLayers()]

# (3) 이미지 전처리 및 YOLO 네트워크에 입력
height, width, channels = img.shape
blob = cv2.dnn.blobFromImage(img, 1 / 255.0, (416, 416), swapRB=True, crop=False)
net.setInput(blob)
outputs = net.forward(output_layers)

# (4) 객체 검출 결과 처리
class_ids, confidences, boxes = [], [], []

for output in outputs:
    for detection in output:
        scores = detection[5:]
        class_id = np.argmax(scores)
        confidence = scores[class_id]
        if confidence > 0.5:  # 신뢰도 임계값
            center_x, center_y, w, h = (detection[0:4] * np.array([width, height, width, height])).astype('int')
            x = int(center_x - w / 2)
            y = int(center_y - h / 2)
            boxes.append([x, y, int(w), int(h)])
            confidences.append(float(confidence))
            class_ids.append(class_id)

# Non-Max Suppression 적용
indices = cv2.dnn.NMSBoxes(boxes, confidences, 0.5, 0.4)

# (5) 검출된 객체 시각화
for i in indices.flatten():
    x, y, w, h = boxes[i]
    label = f"{classes[class_ids[i]]}: {confidences[i]:.2f}"
    cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)
    cv2.putText(img, label, (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

# (6) 시각화 (BGR→RGB 변환)
img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
plt.figure(figsize=(8, 8))
plt.imshow(img_rgb)
plt.axis("off")
plt.title("YOLO Object Detection")
plt.show()
